datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Message {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    body      String
    user      User     @relation(fields: [userID], references: [id])
    userID    String   @db.ObjectId
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model User {
    id            String    @id @default(auto()) @map("_id") @db.ObjectId
    name          String
    email         String    @unique
    password      String?
    messages      Message[]
    joinAt        DateTime  @default(now())
    accounts      Account[]
    sessions      Session[]
    emailVerified DateTime?
    image         String?
    // friends             User[]    @relation("friends", fields: [friendsIDs], references: [id])
    // friendsIDs          String[]  @unique @db.ObjectId
    // symmetricFriends    User[]    @relation("friends", fields: [symmetricFriendsIDs], references: [id])
    // symmetricFriendsIDs String[]  @db.ObjectId
}

model Account {
    id                String  @id @default(auto()) @map("_id") @db.ObjectId
    userId            String  @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.String
    access_token      String? @db.String
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.String
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String   @unique
    userId       String   @db.ObjectId
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
